inline fun <reified T : Enum<T>> valueOf(type: String, default: T): T {
    return try {
        java.lang.Enum.valueOf(T::class.java, type)
    } catch (e: Exception) {
        default
    }
}

fun <T> Collection<T>.beautifyString(): String {
    var resultString = "\n"
    this.parkour { position, item ->
        resultString += "$position => $item\n"
    }
    return resultString
}

fun <T> Collection<T>.parkour(work: (position: Int, item: T) -> Unit) {
    for (i in this.indices) {
        work(i, this.elementAt(i))
    }
}
